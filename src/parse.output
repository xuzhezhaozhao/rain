Terminals unused in grammar

   op_bar
   op_amper
   op_LOWEST
   op_HIGHEST


State 27 conflicts: 1 reduce/reduce
State 43 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 99 conflicts: 14 shift/reduce
State 130 conflicts: 14 shift/reduce


Grammar

    0 $accept: chunk $end

    1 chunk: block

    2 block: stats
    3      | stats retstat

    4 stats: %empty
    5      | stats stat

    6 stat: ';'
    7     | varlist op_asgn explist
    8     | functioncall
    9     | label
   10     | keyword_break
   11     | keyword_goto Name
   12     | keyword_do block keyword_end
   13     | keyword_while exp keyword_do block keyword_end
   14     | keyword_repeat block keyword_until exp
   15     | keyword_if exp keyword_then block elsepart keyword_end
   16     | keyword_for Name op_asgn forexplist keyword_do block keyword_end
   17     | keyword_for namelist keyword_in explist keyword_do block keyword_end
   18     | keyword_function funcname funcbody
   19     | keyword_local keyword_function Name funcbody
   20     | localdecl

   21 elsepart: %empty
   22         | keyword_else block
   23         | keyword_elseif exp keyword_then block elsepart

   24 forexplist: exp
   25           | exp ',' exp
   26           | exp ',' exp ',' exp

   27 localdecl: keyword_local namelist
   28          | keyword_local namelist op_asgn explist

   29 retstat: retstat0
   30        | retstat0 ';'

   31 retstat0: keyword_return
   32         | keyword_return explist

   33 label: op_label Name op_label

   34 funcname: Name funcname0
   35         | Name funcname0 ':' Name

   36 funcname0: %empty
   37          | funcname '.' Name

   38 varlist: var varlist0

   39 varlist0: %empty
   40         | varlist0 ',' var

   41 var: Name
   42    | prefixexp '[' exp ']'
   43    | prefixexp '.' Name

   44 namelist: Name namelist0

   45 namelist0: %empty
   46          | namelist0 ',' Name

   47 explist: exp explist0

   48 explist0: %empty
   49         | explist0 ',' exp

   50 exp: keyword_nil
   51    | keyword_false
   52    | keyword_true
   53    | Numeral
   54    | LiteralString
   55    | op_ellips
   56    | functiondef
   57    | prefixexp
   58    | tableconstructor
   59    | exp binop exp
   60    | unop exp

   61 prefixexp: var
   62          | functioncall
   63          | '(' exp ')'

   64 functioncall: prefixexp args
   65             | prefixexp ':' Name args

   66 args: '(' ')'
   67     | '(' explist ')'
   68     | tableconstructor
   69     | LiteralString

   70 functiondef: keyword_function funcbody

   71 funcbody: '(' ')' block keyword_end
   72         | '(' parlist ')' block keyword_end

   73 parlist: namelist
   74        | namelist ',' op_ellips
   75        | op_ellips

   76 tableconstructor: '{' '}'
   77                 | '{' fieldlist '}'

   78 fieldlist: field fieldlist0
   79          | field fieldlist0 fieldsep

   80 fieldlist0: %empty
   81           | fieldlist0 fieldsep field

   82 field: '[' exp ']' op_asgn exp
   83      | Name op_asgn exp
   84      | exp

   85 fieldsep: ','
   86         | ';'

   87 binop: op_plus
   88      | op_minus
   89      | op_mult
   90      | op_div
   91      | op_mod
   92      | op_eq
   93      | op_neq
   94      | op_lt
   95      | op_le
   96      | op_gt
   97      | op_ge
   98      | op_and
   99      | op_or
  100      | op_conc

  101 unop: op_not

  102 Name: identifier

  103 Numeral: lit_number

  104 LiteralString: lit_string


Terminals, with rules where they appear

$end (0) 0
'(' (40) 63 66 67 71 72
')' (41) 63 66 67 71 72
',' (44) 25 26 40 46 49 74 85
'.' (46) 37 43
':' (58) 35 65
';' (59) 6 30 86
'[' (91) 42 82
']' (93) 42 82
'{' (123) 76 77
'}' (125) 76 77
error (256)
keyword_local (258) 19 27 28
keyword_if (259) 15
keyword_then (260) 15 23
keyword_else (261) 22
keyword_elseif (262) 23
keyword_while (263) 13
keyword_do (264) 12 13 16 17
keyword_repeat (265) 14
keyword_until (266) 14
keyword_break (267) 10
keyword_goto (268) 11
keyword_for (269) 16 17
keyword_in (270) 17
keyword_function (271) 18 19 70
keyword_end (272) 12 13 15 16 17 71 72
keyword_return (273) 31 32
keyword_nil (274) 50
keyword_true (275) 52
keyword_false (276) 51
op_plus (277) 87
op_minus (278) 88
op_mult (279) 89
op_div (280) 90
op_mod (281) 91
op_eq (282) 92
op_neq (283) 93
op_lt (284) 94
op_le (285) 95
op_gt (286) 96
op_ge (287) 97
op_asgn (288) 7 16 28 82 83
op_and (289) 98
op_or (290) 99
op_not (291) 101
op_bar (292)
op_amper (293)
op_conc (294) 100
op_label (295) 33
op_ellips (296) 55 74 75
lit_number (297) 103
lit_string (298) 104
identifier (299) 102
op_LOWEST (300)
op_HIGHEST (301)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
chunk (58)
    on left: 1, on right: 0
block (59)
    on left: 2 3, on right: 1 12 13 14 15 16 17 22 23 71 72
stats (60)
    on left: 4 5, on right: 2 3 5
stat (61)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20, on right: 5
elsepart (62)
    on left: 21 22 23, on right: 15 23
forexplist (63)
    on left: 24 25 26, on right: 16
localdecl (64)
    on left: 27 28, on right: 20
retstat (65)
    on left: 29 30, on right: 3
retstat0 (66)
    on left: 31 32, on right: 29 30
label (67)
    on left: 33, on right: 9
funcname (68)
    on left: 34 35, on right: 18 37
funcname0 (69)
    on left: 36 37, on right: 34 35
varlist (70)
    on left: 38, on right: 7
varlist0 (71)
    on left: 39 40, on right: 38 40
var (72)
    on left: 41 42 43, on right: 38 40 61
namelist (73)
    on left: 44, on right: 17 27 28 73 74
namelist0 (74)
    on left: 45 46, on right: 44 46
explist (75)
    on left: 47, on right: 7 17 28 32 67
explist0 (76)
    on left: 48 49, on right: 47 49
exp (77)
    on left: 50 51 52 53 54 55 56 57 58 59 60, on right: 13 14 15 23
    24 25 26 42 47 49 59 60 63 82 83 84
prefixexp (78)
    on left: 61 62 63, on right: 42 43 57 64 65
functioncall (79)
    on left: 64 65, on right: 8 62
args (80)
    on left: 66 67 68 69, on right: 64 65
functiondef (81)
    on left: 70, on right: 56
funcbody (82)
    on left: 71 72, on right: 18 19 70
parlist (83)
    on left: 73 74 75, on right: 72
tableconstructor (84)
    on left: 76 77, on right: 58 68
fieldlist (85)
    on left: 78 79, on right: 77
fieldlist0 (86)
    on left: 80 81, on right: 78 79 81
field (87)
    on left: 82 83 84, on right: 78 79 81
fieldsep (88)
    on left: 85 86, on right: 79 81
binop (89)
    on left: 87 88 89 90 91 92 93 94 95 96 97 98 99 100, on right:
    59
unop (90)
    on left: 101, on right: 60
Name (91)
    on left: 102, on right: 11 16 19 33 34 35 37 41 43 44 46 65 83
Numeral (92)
    on left: 103, on right: 53
LiteralString (93)
    on left: 104, on right: 54 69


State 0

    0 $accept: . chunk $end

    $default  reduce using rule 4 (stats)

    chunk  go to state 1
    block  go to state 2
    stats  go to state 3


State 1

    0 $accept: chunk . $end

    $end  shift, and go to state 4


State 2

    1 chunk: block .

    $default  reduce using rule 1 (chunk)


State 3

    2 block: stats .
    3      | stats . retstat
    5 stats: stats . stat

    keyword_local     shift, and go to state 5
    keyword_if        shift, and go to state 6
    keyword_while     shift, and go to state 7
    keyword_do        shift, and go to state 8
    keyword_repeat    shift, and go to state 9
    keyword_break     shift, and go to state 10
    keyword_goto      shift, and go to state 11
    keyword_for       shift, and go to state 12
    keyword_function  shift, and go to state 13
    keyword_return    shift, and go to state 14
    op_label          shift, and go to state 15
    identifier        shift, and go to state 16
    ';'               shift, and go to state 17
    '('               shift, and go to state 18

    $default  reduce using rule 2 (block)

    stat          go to state 19
    localdecl     go to state 20
    retstat       go to state 21
    retstat0      go to state 22
    label         go to state 23
    varlist       go to state 24
    var           go to state 25
    prefixexp     go to state 26
    functioncall  go to state 27
    Name          go to state 28


State 4

    0 $accept: chunk $end .

    $default  accept


State 5

   19 stat: keyword_local . keyword_function Name funcbody
   27 localdecl: keyword_local . namelist
   28          | keyword_local . namelist op_asgn explist

    keyword_function  shift, and go to state 29
    identifier        shift, and go to state 16

    namelist  go to state 30
    Name      go to state 31


State 6

   15 stat: keyword_if . exp keyword_then block elsepart keyword_end

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 42
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 7

   13 stat: keyword_while . exp keyword_do block keyword_end

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 50
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 8

   12 stat: keyword_do . block keyword_end

    $default  reduce using rule 4 (stats)

    block  go to state 51
    stats  go to state 3


State 9

   14 stat: keyword_repeat . block keyword_until exp

    $default  reduce using rule 4 (stats)

    block  go to state 52
    stats  go to state 3


State 10

   10 stat: keyword_break .

    $default  reduce using rule 10 (stat)


State 11

   11 stat: keyword_goto . Name

    identifier  shift, and go to state 16

    Name  go to state 53


State 12

   16 stat: keyword_for . Name op_asgn forexplist keyword_do block keyword_end
   17     | keyword_for . namelist keyword_in explist keyword_do block keyword_end

    identifier  shift, and go to state 16

    namelist  go to state 54
    Name      go to state 55


State 13

   18 stat: keyword_function . funcname funcbody

    identifier  shift, and go to state 16

    funcname  go to state 56
    Name      go to state 57


State 14

   31 retstat0: keyword_return .
   32         | keyword_return . explist

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    $default  reduce using rule 31 (retstat0)

    var               go to state 41
    explist           go to state 58
    exp               go to state 59
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 15

   33 label: op_label . Name op_label

    identifier  shift, and go to state 16

    Name  go to state 60


State 16

  102 Name: identifier .

    $default  reduce using rule 102 (Name)


State 17

    6 stat: ';' .

    $default  reduce using rule 6 (stat)


State 18

   63 prefixexp: '(' . exp ')'

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 61
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 19

    5 stats: stats stat .

    $default  reduce using rule 5 (stats)


State 20

   20 stat: localdecl .

    $default  reduce using rule 20 (stat)


State 21

    3 block: stats retstat .

    $default  reduce using rule 3 (block)


State 22

   29 retstat: retstat0 .
   30        | retstat0 . ';'

    ';'  shift, and go to state 62

    $default  reduce using rule 29 (retstat)


State 23

    9 stat: label .

    $default  reduce using rule 9 (stat)


State 24

    7 stat: varlist . op_asgn explist

    op_asgn  shift, and go to state 63


State 25

   38 varlist: var . varlist0
   61 prefixexp: var .

    op_asgn   reduce using rule 39 (varlist0)
    ','       reduce using rule 39 (varlist0)
    $default  reduce using rule 61 (prefixexp)

    varlist0  go to state 64


State 26

   42 var: prefixexp . '[' exp ']'
   43    | prefixexp . '.' Name
   64 functioncall: prefixexp . args
   65             | prefixexp . ':' Name args

    lit_string  shift, and go to state 39
    ':'         shift, and go to state 65
    '.'         shift, and go to state 66
    '['         shift, and go to state 67
    '('         shift, and go to state 68
    '{'         shift, and go to state 40

    args              go to state 69
    tableconstructor  go to state 70
    LiteralString     go to state 71


State 27

    8 stat: functioncall .
   62 prefixexp: functioncall .

    lit_string  reduce using rule 62 (prefixexp)
    ':'         reduce using rule 62 (prefixexp)
    '.'         reduce using rule 62 (prefixexp)
    '['         reduce using rule 62 (prefixexp)
    '('         reduce using rule 8 (stat)
    '('         [reduce using rule 62 (prefixexp)]
    '{'         reduce using rule 62 (prefixexp)
    $default    reduce using rule 8 (stat)


State 28

   41 var: Name .

    $default  reduce using rule 41 (var)


State 29

   19 stat: keyword_local keyword_function . Name funcbody

    identifier  shift, and go to state 16

    Name  go to state 72


State 30

   27 localdecl: keyword_local namelist .
   28          | keyword_local namelist . op_asgn explist

    op_asgn  shift, and go to state 73

    $default  reduce using rule 27 (localdecl)


State 31

   44 namelist: Name . namelist0

    $default  reduce using rule 45 (namelist0)

    namelist0  go to state 74


State 32

   70 functiondef: keyword_function . funcbody

    '('  shift, and go to state 75

    funcbody  go to state 76


State 33

   50 exp: keyword_nil .

    $default  reduce using rule 50 (exp)


State 34

   52 exp: keyword_true .

    $default  reduce using rule 52 (exp)


State 35

   51 exp: keyword_false .

    $default  reduce using rule 51 (exp)


State 36

  101 unop: op_not .

    $default  reduce using rule 101 (unop)


State 37

   55 exp: op_ellips .

    $default  reduce using rule 55 (exp)


State 38

  103 Numeral: lit_number .

    $default  reduce using rule 103 (Numeral)


State 39

  104 LiteralString: lit_string .

    $default  reduce using rule 104 (LiteralString)


State 40

   76 tableconstructor: '{' . '}'
   77                 | '{' . fieldlist '}'

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '['               shift, and go to state 77
    '('               shift, and go to state 18
    '{'               shift, and go to state 40
    '}'               shift, and go to state 78

    var               go to state 41
    exp               go to state 79
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    fieldlist         go to state 80
    field             go to state 81
    unop              go to state 47
    Name              go to state 82
    Numeral           go to state 48
    LiteralString     go to state 49


State 41

   61 prefixexp: var .

    $default  reduce using rule 61 (prefixexp)


State 42

   15 stat: keyword_if exp . keyword_then block elsepart keyword_end
   59 exp: exp . binop exp

    keyword_then  shift, and go to state 83
    op_plus       shift, and go to state 84
    op_minus      shift, and go to state 85
    op_mult       shift, and go to state 86
    op_div        shift, and go to state 87
    op_mod        shift, and go to state 88
    op_eq         shift, and go to state 89
    op_neq        shift, and go to state 90
    op_lt         shift, and go to state 91
    op_le         shift, and go to state 92
    op_gt         shift, and go to state 93
    op_ge         shift, and go to state 94
    op_and        shift, and go to state 95
    op_or         shift, and go to state 96
    op_conc       shift, and go to state 97

    binop  go to state 98


State 43

   42 var: prefixexp . '[' exp ']'
   43    | prefixexp . '.' Name
   57 exp: prefixexp .
   64 functioncall: prefixexp . args
   65             | prefixexp . ':' Name args

    lit_string  shift, and go to state 39
    ':'         shift, and go to state 65
    '.'         shift, and go to state 66
    '['         shift, and go to state 67
    '('         shift, and go to state 68
    '{'         shift, and go to state 40

    '('       [reduce using rule 57 (exp)]
    $default  reduce using rule 57 (exp)

    args              go to state 69
    tableconstructor  go to state 70
    LiteralString     go to state 71


State 44

   62 prefixexp: functioncall .

    $default  reduce using rule 62 (prefixexp)


State 45

   56 exp: functiondef .

    $default  reduce using rule 56 (exp)


State 46

   58 exp: tableconstructor .

    $default  reduce using rule 58 (exp)


State 47

   60 exp: unop . exp

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 99
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 48

   53 exp: Numeral .

    $default  reduce using rule 53 (exp)


State 49

   54 exp: LiteralString .

    $default  reduce using rule 54 (exp)


State 50

   13 stat: keyword_while exp . keyword_do block keyword_end
   59 exp: exp . binop exp

    keyword_do  shift, and go to state 100
    op_plus     shift, and go to state 84
    op_minus    shift, and go to state 85
    op_mult     shift, and go to state 86
    op_div      shift, and go to state 87
    op_mod      shift, and go to state 88
    op_eq       shift, and go to state 89
    op_neq      shift, and go to state 90
    op_lt       shift, and go to state 91
    op_le       shift, and go to state 92
    op_gt       shift, and go to state 93
    op_ge       shift, and go to state 94
    op_and      shift, and go to state 95
    op_or       shift, and go to state 96
    op_conc     shift, and go to state 97

    binop  go to state 98


State 51

   12 stat: keyword_do block . keyword_end

    keyword_end  shift, and go to state 101


State 52

   14 stat: keyword_repeat block . keyword_until exp

    keyword_until  shift, and go to state 102


State 53

   11 stat: keyword_goto Name .

    $default  reduce using rule 11 (stat)


State 54

   17 stat: keyword_for namelist . keyword_in explist keyword_do block keyword_end

    keyword_in  shift, and go to state 103


State 55

   16 stat: keyword_for Name . op_asgn forexplist keyword_do block keyword_end
   44 namelist: Name . namelist0

    op_asgn  shift, and go to state 104

    $default  reduce using rule 45 (namelist0)

    namelist0  go to state 74


State 56

   18 stat: keyword_function funcname . funcbody

    '('  shift, and go to state 75

    funcbody  go to state 105


State 57

   34 funcname: Name . funcname0
   35         | Name . funcname0 ':' Name

    identifier  shift, and go to state 16

    $default  reduce using rule 36 (funcname0)

    funcname   go to state 106
    funcname0  go to state 107
    Name       go to state 57


State 58

   32 retstat0: keyword_return explist .

    $default  reduce using rule 32 (retstat0)


State 59

   47 explist: exp . explist0
   59 exp: exp . binop exp

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97

    $default  reduce using rule 48 (explist0)

    explist0  go to state 108
    binop     go to state 98


State 60

   33 label: op_label Name . op_label

    op_label  shift, and go to state 109


State 61

   59 exp: exp . binop exp
   63 prefixexp: '(' exp . ')'

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97
    ')'       shift, and go to state 110

    binop  go to state 98


State 62

   30 retstat: retstat0 ';' .

    $default  reduce using rule 30 (retstat)


State 63

    7 stat: varlist op_asgn . explist

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    explist           go to state 111
    exp               go to state 59
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 64

   38 varlist: var varlist0 .
   40 varlist0: varlist0 . ',' var

    ','  shift, and go to state 112

    $default  reduce using rule 38 (varlist)


State 65

   65 functioncall: prefixexp ':' . Name args

    identifier  shift, and go to state 16

    Name  go to state 113


State 66

   43 var: prefixexp '.' . Name

    identifier  shift, and go to state 16

    Name  go to state 114


State 67

   42 var: prefixexp '[' . exp ']'

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 115
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 68

   66 args: '(' . ')'
   67     | '(' . explist ')'

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    ')'               shift, and go to state 116
    '{'               shift, and go to state 40

    var               go to state 41
    explist           go to state 117
    exp               go to state 59
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 69

   64 functioncall: prefixexp args .

    $default  reduce using rule 64 (functioncall)


State 70

   68 args: tableconstructor .

    $default  reduce using rule 68 (args)


State 71

   69 args: LiteralString .

    $default  reduce using rule 69 (args)


State 72

   19 stat: keyword_local keyword_function Name . funcbody

    '('  shift, and go to state 75

    funcbody  go to state 118


State 73

   28 localdecl: keyword_local namelist op_asgn . explist

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    explist           go to state 119
    exp               go to state 59
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 74

   44 namelist: Name namelist0 .
   46 namelist0: namelist0 . ',' Name

    ','  shift, and go to state 120

    ','       [reduce using rule 44 (namelist)]
    $default  reduce using rule 44 (namelist)


State 75

   71 funcbody: '(' . ')' block keyword_end
   72         | '(' . parlist ')' block keyword_end

    op_ellips   shift, and go to state 121
    identifier  shift, and go to state 16
    ')'         shift, and go to state 122

    namelist  go to state 123
    parlist   go to state 124
    Name      go to state 31


State 76

   70 functiondef: keyword_function funcbody .

    $default  reduce using rule 70 (functiondef)


State 77

   82 field: '[' . exp ']' op_asgn exp

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 125
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 78

   76 tableconstructor: '{' '}' .

    $default  reduce using rule 76 (tableconstructor)


State 79

   59 exp: exp . binop exp
   84 field: exp .

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97

    $default  reduce using rule 84 (field)

    binop  go to state 98


State 80

   77 tableconstructor: '{' fieldlist . '}'

    '}'  shift, and go to state 126


State 81

   78 fieldlist: field . fieldlist0
   79          | field . fieldlist0 fieldsep

    $default  reduce using rule 80 (fieldlist0)

    fieldlist0  go to state 127


State 82

   41 var: Name .
   83 field: Name . op_asgn exp

    op_asgn  shift, and go to state 128

    $default  reduce using rule 41 (var)


State 83

   15 stat: keyword_if exp keyword_then . block elsepart keyword_end

    $default  reduce using rule 4 (stats)

    block  go to state 129
    stats  go to state 3


State 84

   87 binop: op_plus .

    $default  reduce using rule 87 (binop)


State 85

   88 binop: op_minus .

    $default  reduce using rule 88 (binop)


State 86

   89 binop: op_mult .

    $default  reduce using rule 89 (binop)


State 87

   90 binop: op_div .

    $default  reduce using rule 90 (binop)


State 88

   91 binop: op_mod .

    $default  reduce using rule 91 (binop)


State 89

   92 binop: op_eq .

    $default  reduce using rule 92 (binop)


State 90

   93 binop: op_neq .

    $default  reduce using rule 93 (binop)


State 91

   94 binop: op_lt .

    $default  reduce using rule 94 (binop)


State 92

   95 binop: op_le .

    $default  reduce using rule 95 (binop)


State 93

   96 binop: op_gt .

    $default  reduce using rule 96 (binop)


State 94

   97 binop: op_ge .

    $default  reduce using rule 97 (binop)


State 95

   98 binop: op_and .

    $default  reduce using rule 98 (binop)


State 96

   99 binop: op_or .

    $default  reduce using rule 99 (binop)


State 97

  100 binop: op_conc .

    $default  reduce using rule 100 (binop)


State 98

   59 exp: exp binop . exp

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 130
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 99

   59 exp: exp . binop exp
   60    | unop exp .

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97

    op_plus   [reduce using rule 60 (exp)]
    op_minus  [reduce using rule 60 (exp)]
    op_mult   [reduce using rule 60 (exp)]
    op_div    [reduce using rule 60 (exp)]
    op_mod    [reduce using rule 60 (exp)]
    op_eq     [reduce using rule 60 (exp)]
    op_neq    [reduce using rule 60 (exp)]
    op_lt     [reduce using rule 60 (exp)]
    op_le     [reduce using rule 60 (exp)]
    op_gt     [reduce using rule 60 (exp)]
    op_ge     [reduce using rule 60 (exp)]
    op_and    [reduce using rule 60 (exp)]
    op_or     [reduce using rule 60 (exp)]
    op_conc   [reduce using rule 60 (exp)]
    $default  reduce using rule 60 (exp)

    binop  go to state 98


State 100

   13 stat: keyword_while exp keyword_do . block keyword_end

    $default  reduce using rule 4 (stats)

    block  go to state 131
    stats  go to state 3


State 101

   12 stat: keyword_do block keyword_end .

    $default  reduce using rule 12 (stat)


State 102

   14 stat: keyword_repeat block keyword_until . exp

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 132
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 103

   17 stat: keyword_for namelist keyword_in . explist keyword_do block keyword_end

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    explist           go to state 133
    exp               go to state 59
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 104

   16 stat: keyword_for Name op_asgn . forexplist keyword_do block keyword_end

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    forexplist        go to state 134
    var               go to state 41
    exp               go to state 135
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 105

   18 stat: keyword_function funcname funcbody .

    $default  reduce using rule 18 (stat)


State 106

   37 funcname0: funcname . '.' Name

    '.'  shift, and go to state 136


State 107

   34 funcname: Name funcname0 .
   35         | Name funcname0 . ':' Name

    ':'  shift, and go to state 137

    $default  reduce using rule 34 (funcname)


State 108

   47 explist: exp explist0 .
   49 explist0: explist0 . ',' exp

    ','  shift, and go to state 138

    $default  reduce using rule 47 (explist)


State 109

   33 label: op_label Name op_label .

    $default  reduce using rule 33 (label)


State 110

   63 prefixexp: '(' exp ')' .

    $default  reduce using rule 63 (prefixexp)


State 111

    7 stat: varlist op_asgn explist .

    $default  reduce using rule 7 (stat)


State 112

   40 varlist0: varlist0 ',' . var

    identifier  shift, and go to state 16
    '('         shift, and go to state 18

    var           go to state 139
    prefixexp     go to state 26
    functioncall  go to state 44
    Name          go to state 28


State 113

   65 functioncall: prefixexp ':' Name . args

    lit_string  shift, and go to state 39
    '('         shift, and go to state 68
    '{'         shift, and go to state 40

    args              go to state 140
    tableconstructor  go to state 70
    LiteralString     go to state 71


State 114

   43 var: prefixexp '.' Name .

    $default  reduce using rule 43 (var)


State 115

   42 var: prefixexp '[' exp . ']'
   59 exp: exp . binop exp

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97
    ']'       shift, and go to state 141

    binop  go to state 98


State 116

   66 args: '(' ')' .

    $default  reduce using rule 66 (args)


State 117

   67 args: '(' explist . ')'

    ')'  shift, and go to state 142


State 118

   19 stat: keyword_local keyword_function Name funcbody .

    $default  reduce using rule 19 (stat)


State 119

   28 localdecl: keyword_local namelist op_asgn explist .

    $default  reduce using rule 28 (localdecl)


State 120

   46 namelist0: namelist0 ',' . Name

    identifier  shift, and go to state 16

    Name  go to state 143


State 121

   75 parlist: op_ellips .

    $default  reduce using rule 75 (parlist)


State 122

   71 funcbody: '(' ')' . block keyword_end

    $default  reduce using rule 4 (stats)

    block  go to state 144
    stats  go to state 3


State 123

   73 parlist: namelist .
   74        | namelist . ',' op_ellips

    ','  shift, and go to state 145

    $default  reduce using rule 73 (parlist)


State 124

   72 funcbody: '(' parlist . ')' block keyword_end

    ')'  shift, and go to state 146


State 125

   59 exp: exp . binop exp
   82 field: '[' exp . ']' op_asgn exp

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97
    ']'       shift, and go to state 147

    binop  go to state 98


State 126

   77 tableconstructor: '{' fieldlist '}' .

    $default  reduce using rule 77 (tableconstructor)


State 127

   78 fieldlist: field fieldlist0 .
   79          | field fieldlist0 . fieldsep
   81 fieldlist0: fieldlist0 . fieldsep field

    ';'  shift, and go to state 148
    ','  shift, and go to state 149

    $default  reduce using rule 78 (fieldlist)

    fieldsep  go to state 150


State 128

   83 field: Name op_asgn . exp

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 151
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 129

   15 stat: keyword_if exp keyword_then block . elsepart keyword_end

    keyword_else    shift, and go to state 152
    keyword_elseif  shift, and go to state 153

    $default  reduce using rule 21 (elsepart)

    elsepart  go to state 154


State 130

   59 exp: exp . binop exp
   59    | exp binop exp .

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97

    op_plus   [reduce using rule 59 (exp)]
    op_minus  [reduce using rule 59 (exp)]
    op_mult   [reduce using rule 59 (exp)]
    op_div    [reduce using rule 59 (exp)]
    op_mod    [reduce using rule 59 (exp)]
    op_eq     [reduce using rule 59 (exp)]
    op_neq    [reduce using rule 59 (exp)]
    op_lt     [reduce using rule 59 (exp)]
    op_le     [reduce using rule 59 (exp)]
    op_gt     [reduce using rule 59 (exp)]
    op_ge     [reduce using rule 59 (exp)]
    op_and    [reduce using rule 59 (exp)]
    op_or     [reduce using rule 59 (exp)]
    op_conc   [reduce using rule 59 (exp)]
    $default  reduce using rule 59 (exp)

    binop  go to state 98


State 131

   13 stat: keyword_while exp keyword_do block . keyword_end

    keyword_end  shift, and go to state 155


State 132

   14 stat: keyword_repeat block keyword_until exp .
   59 exp: exp . binop exp

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97

    $default  reduce using rule 14 (stat)

    binop  go to state 98


State 133

   17 stat: keyword_for namelist keyword_in explist . keyword_do block keyword_end

    keyword_do  shift, and go to state 156


State 134

   16 stat: keyword_for Name op_asgn forexplist . keyword_do block keyword_end

    keyword_do  shift, and go to state 157


State 135

   24 forexplist: exp .
   25           | exp . ',' exp
   26           | exp . ',' exp ',' exp
   59 exp: exp . binop exp

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97
    ','       shift, and go to state 158

    $default  reduce using rule 24 (forexplist)

    binop  go to state 98


State 136

   37 funcname0: funcname '.' . Name

    identifier  shift, and go to state 16

    Name  go to state 159


State 137

   35 funcname: Name funcname0 ':' . Name

    identifier  shift, and go to state 16

    Name  go to state 160


State 138

   49 explist0: explist0 ',' . exp

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 161
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 139

   40 varlist0: varlist0 ',' var .
   61 prefixexp: var .

    op_asgn   reduce using rule 40 (varlist0)
    ','       reduce using rule 40 (varlist0)
    $default  reduce using rule 61 (prefixexp)


State 140

   65 functioncall: prefixexp ':' Name args .

    $default  reduce using rule 65 (functioncall)


State 141

   42 var: prefixexp '[' exp ']' .

    $default  reduce using rule 42 (var)


State 142

   67 args: '(' explist ')' .

    $default  reduce using rule 67 (args)


State 143

   46 namelist0: namelist0 ',' Name .

    $default  reduce using rule 46 (namelist0)


State 144

   71 funcbody: '(' ')' block . keyword_end

    keyword_end  shift, and go to state 162


State 145

   74 parlist: namelist ',' . op_ellips

    op_ellips  shift, and go to state 163


State 146

   72 funcbody: '(' parlist ')' . block keyword_end

    $default  reduce using rule 4 (stats)

    block  go to state 164
    stats  go to state 3


State 147

   82 field: '[' exp ']' . op_asgn exp

    op_asgn  shift, and go to state 165


State 148

   86 fieldsep: ';' .

    $default  reduce using rule 86 (fieldsep)


State 149

   85 fieldsep: ',' .

    $default  reduce using rule 85 (fieldsep)


State 150

   79 fieldlist: field fieldlist0 fieldsep .
   81 fieldlist0: fieldlist0 fieldsep . field

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '['               shift, and go to state 77
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    $default  reduce using rule 79 (fieldlist)

    var               go to state 41
    exp               go to state 79
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    field             go to state 166
    unop              go to state 47
    Name              go to state 82
    Numeral           go to state 48
    LiteralString     go to state 49


State 151

   59 exp: exp . binop exp
   83 field: Name op_asgn exp .

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97

    $default  reduce using rule 83 (field)

    binop  go to state 98


State 152

   22 elsepart: keyword_else . block

    $default  reduce using rule 4 (stats)

    block  go to state 167
    stats  go to state 3


State 153

   23 elsepart: keyword_elseif . exp keyword_then block elsepart

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 168
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 154

   15 stat: keyword_if exp keyword_then block elsepart . keyword_end

    keyword_end  shift, and go to state 169


State 155

   13 stat: keyword_while exp keyword_do block keyword_end .

    $default  reduce using rule 13 (stat)


State 156

   17 stat: keyword_for namelist keyword_in explist keyword_do . block keyword_end

    $default  reduce using rule 4 (stats)

    block  go to state 170
    stats  go to state 3


State 157

   16 stat: keyword_for Name op_asgn forexplist keyword_do . block keyword_end

    $default  reduce using rule 4 (stats)

    block  go to state 171
    stats  go to state 3


State 158

   25 forexplist: exp ',' . exp
   26           | exp ',' . exp ',' exp

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 172
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 159

   37 funcname0: funcname '.' Name .

    $default  reduce using rule 37 (funcname0)


State 160

   35 funcname: Name funcname0 ':' Name .

    $default  reduce using rule 35 (funcname)


State 161

   49 explist0: explist0 ',' exp .
   59 exp: exp . binop exp

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97

    $default  reduce using rule 49 (explist0)

    binop  go to state 98


State 162

   71 funcbody: '(' ')' block keyword_end .

    $default  reduce using rule 71 (funcbody)


State 163

   74 parlist: namelist ',' op_ellips .

    $default  reduce using rule 74 (parlist)


State 164

   72 funcbody: '(' parlist ')' block . keyword_end

    keyword_end  shift, and go to state 173


State 165

   82 field: '[' exp ']' op_asgn . exp

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 174
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 166

   81 fieldlist0: fieldlist0 fieldsep field .

    $default  reduce using rule 81 (fieldlist0)


State 167

   22 elsepart: keyword_else block .

    $default  reduce using rule 22 (elsepart)


State 168

   23 elsepart: keyword_elseif exp . keyword_then block elsepart
   59 exp: exp . binop exp

    keyword_then  shift, and go to state 175
    op_plus       shift, and go to state 84
    op_minus      shift, and go to state 85
    op_mult       shift, and go to state 86
    op_div        shift, and go to state 87
    op_mod        shift, and go to state 88
    op_eq         shift, and go to state 89
    op_neq        shift, and go to state 90
    op_lt         shift, and go to state 91
    op_le         shift, and go to state 92
    op_gt         shift, and go to state 93
    op_ge         shift, and go to state 94
    op_and        shift, and go to state 95
    op_or         shift, and go to state 96
    op_conc       shift, and go to state 97

    binop  go to state 98


State 169

   15 stat: keyword_if exp keyword_then block elsepart keyword_end .

    $default  reduce using rule 15 (stat)


State 170

   17 stat: keyword_for namelist keyword_in explist keyword_do block . keyword_end

    keyword_end  shift, and go to state 176


State 171

   16 stat: keyword_for Name op_asgn forexplist keyword_do block . keyword_end

    keyword_end  shift, and go to state 177


State 172

   25 forexplist: exp ',' exp .
   26           | exp ',' exp . ',' exp
   59 exp: exp . binop exp

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97
    ','       shift, and go to state 178

    $default  reduce using rule 25 (forexplist)

    binop  go to state 98


State 173

   72 funcbody: '(' parlist ')' block keyword_end .

    $default  reduce using rule 72 (funcbody)


State 174

   59 exp: exp . binop exp
   82 field: '[' exp ']' op_asgn exp .

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97

    $default  reduce using rule 82 (field)

    binop  go to state 98


State 175

   23 elsepart: keyword_elseif exp keyword_then . block elsepart

    $default  reduce using rule 4 (stats)

    block  go to state 179
    stats  go to state 3


State 176

   17 stat: keyword_for namelist keyword_in explist keyword_do block keyword_end .

    $default  reduce using rule 17 (stat)


State 177

   16 stat: keyword_for Name op_asgn forexplist keyword_do block keyword_end .

    $default  reduce using rule 16 (stat)


State 178

   26 forexplist: exp ',' exp ',' . exp

    keyword_function  shift, and go to state 32
    keyword_nil       shift, and go to state 33
    keyword_true      shift, and go to state 34
    keyword_false     shift, and go to state 35
    op_not            shift, and go to state 36
    op_ellips         shift, and go to state 37
    lit_number        shift, and go to state 38
    lit_string        shift, and go to state 39
    identifier        shift, and go to state 16
    '('               shift, and go to state 18
    '{'               shift, and go to state 40

    var               go to state 41
    exp               go to state 180
    prefixexp         go to state 43
    functioncall      go to state 44
    functiondef       go to state 45
    tableconstructor  go to state 46
    unop              go to state 47
    Name              go to state 28
    Numeral           go to state 48
    LiteralString     go to state 49


State 179

   23 elsepart: keyword_elseif exp keyword_then block . elsepart

    keyword_else    shift, and go to state 152
    keyword_elseif  shift, and go to state 153

    $default  reduce using rule 21 (elsepart)

    elsepart  go to state 181


State 180

   26 forexplist: exp ',' exp ',' exp .
   59 exp: exp . binop exp

    op_plus   shift, and go to state 84
    op_minus  shift, and go to state 85
    op_mult   shift, and go to state 86
    op_div    shift, and go to state 87
    op_mod    shift, and go to state 88
    op_eq     shift, and go to state 89
    op_neq    shift, and go to state 90
    op_lt     shift, and go to state 91
    op_le     shift, and go to state 92
    op_gt     shift, and go to state 93
    op_ge     shift, and go to state 94
    op_and    shift, and go to state 95
    op_or     shift, and go to state 96
    op_conc   shift, and go to state 97

    $default  reduce using rule 26 (forexplist)

    binop  go to state 98


State 181

   23 elsepart: keyword_elseif exp keyword_then block elsepart .

    $default  reduce using rule 23 (elsepart)
